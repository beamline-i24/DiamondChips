;    Configuration
;    This is the master set up file for GeoBrick 14 with 3-4 SmarAct motors
;    for Installation as Moveable Equipment in Diamond and LCLS. It should
;    contain Diamond defaults M- and I-variables as well as other ‘normal’ 
;    Diamond programs etc.
CLOSE
DELETE GATHER
DELETE TRACE

;    Coordinate Systems
UNDEFINE ALL
&1
#1->0
#2->0
#3->0
#4->0
&2
#1->10000X
#2->10000Y
#3->10000Z
#4->0
&3
#1->0
#2->0
#3->0
#4->X

;    Motion Programs
;    Author: 	Lee Hudson, Robin Owen, Darren Sherrell	
;    Descripton:	Scan up or down through a city block
;    31 is down. 32 is up.  Triggers EQU4 pin 4
;Setup
#DEFINE PROGRAM_NO 70
#DEFINE GLOBAL_ACC    	P(100 * PROGRAM_NO + 1)
#DEFINE GLOBAL_S_CURVE	P(100 * PROGRAM_NO + 2)
#DEFINE X_VEL         	P(100 * PROGRAM_NO + 3)
#DEFINE Y_VEL	          P(100 * PROGRAM_NO + 4)
#DEFINE Z_VEL	          P(100 * PROGRAM_NO + 5)
#DEFINE X_ACC	          P(100 * PROGRAM_NO + 6)
#DEFINE Y_ACC	          P(100 * PROGRAM_NO + 7)
#DEFINE Z_ACC	          P(100 * PROGRAM_NO + 8) 
#DEFINE X_COUNTER	      P(100 * PROGRAM_NO + 9)
#DEFINE Y_COUNTER	      P(100 * PROGRAM_NO + 10)
#DEFINE X_NUM_STEPS	    P(100 * PROGRAM_NO + 11)
#DEFINE Y_NUM_STEPS	    P(100 * PROGRAM_NO + 12)
#DEFINE X_STEP_SIZE   	P(100 * PROGRAM_NO + 13)
#DEFINE Y_STEP_SIZE	    P(100 * PROGRAM_NO + 14)
#DEFINE DWELL_TIME    	P(100 * PROGRAM_NO + 15)
#DEFINE X_START	        P(100 * PROGRAM_NO + 16)       
#DEFINE Y_START	        P(100 * PROGRAM_NO + 17)       
#DEFINE Z_START	        P(100 * PROGRAM_NO + 18)
#DEFINE PATHTYPE        P(100 * PROGRAM_NO + 19)
M408 = 100            ;set up triggering
M409 = 150            ;set up triggering
M412 = 0 M411 = 1     ; ensures trigger is low

DEL GAT	              ; Erase any defined gather buffer
&1                    ; Coordinate System 1
CLOSE	                ; Make sure all buffers are closed
OPEN PROG PROGRAM_NO	; Open buffer for program entry
CLEAR	                ; Erase existing contents of buffer
LINEAR                ; Blended linear interpolation move mode
ABS                   ; absolute mode - moves specified by position
TA(GLOBAL_ACC)        ; Set 1/2 sec (500 mspec acceleration time)
TS(GLOBAL_S_CURVE)    ; Set no S-curve acceleration time
GLOBAL_ACC = 1
GLOBAL_S_CURVE = 0
X_VEL = 20
Y_VEL = 20
Z_VEL = 20
X_COUNTER = 1
Y_COUNTER = 1
;For testing use the below. Comment out for running remotely.
;X_START = 0
;Y_START = 0
;Z_START = 0
;X_STEP_SIZE = 0.125 ; spacing of features with a block
;Y_STEP_SIZE = 0.125
;X_NUM_STEPS = 12    ; number of columns in a city block
;Y_NUM_STEPS = 12    ; number of rows in a city block
;DWELL_TIME = 250
;PATHTYPE = 31

F(X_VEL) F(Y_VEL) F(Z_VEL) ;Start of motion program
X(X_START) Y(Y_START) Z(Z_START)
DWELL0

IF (PATHTYPE = 31)
GOSUB31
ENDIF
IF (PATHTYPE = 32)
GOSUB32
ENDIF
RETURN

N31  ;Starts top right. Ends bottom right
WHILE(Y_COUNTER < Y_NUM_STEPS/2+1)
	WHILE(X_COUNTER < X_NUM_STEPS)
		X(X_START + (X_COUNTER*X_STEP_SIZE))
		GOSUB102
		X_COUNTER = X_COUNTER + 1
	ENDWHILE
	Y(Y_START + ((2*Y_COUNTER-1)*Y_STEP_SIZE))
	WHILE(X_COUNTER > 0)
		X(X_START+((X_COUNTER-1)*X_STEP_SIZE))
		GOSUB102
		X_COUNTER = X_COUNTER - 1
	ENDWHILE
	Y(Y_START+(2*Y_COUNTER*Y_STEP_SIZE))
	Y_COUNTER = Y_COUNTER + 1
ENDWHILE
RETURN

N32 ;Starts bottom right. Ends top right
GOSUB102
WHILE(Y_COUNTER < Y_NUM_STEPS/2+1)
	WHILE(X_COUNTER < X_NUM_STEPS)
		X(X_START + (X_COUNTER*X_STEP_SIZE))
		GOSUB102
		X_COUNTER = X_COUNTER + 1
	ENDWHILE
	Y(Y_START - ((2*Y_COUNTER-1)*Y_STEP_SIZE))
	WHILE(X_COUNTER > 0)
		X(X_START+((X_COUNTER-1)*X_STEP_SIZE))
		GOSUB102
		X_COUNTER = X_COUNTER - 1
	ENDWHILE
	Y(Y_START-(2*Y_COUNTER*Y_STEP_SIZE))
	Y_COUNTER = Y_COUNTER + 1
ENDWHILE
RETURN
;Trigger routine. Triggers EQU4 pin 4
N102                   ; this is the trigger for the detector and then a dwell
  M412 = 1             ; would be best to move this out of here and do while the stages move
  M411 = 1             ; trigger high 
  DWELL(DWELL_TIME/2)  ; split Dwell in 2 so detector sees a sawtooth
  M412 = 0 
  M411 = 1             ; return trigger to low
  DWELL(DWELL_TIME/2)  ; 2nd half of sawtooth
RETURN
CLOSE	                 ; Close buffer - end of program

;    P-variables   
;    P1...P32 Motor Positions (Diamond Standard)
;    P100...3200 Motor Specific (Diamond Standard)
;    P3200..9999 Free

;    Q-variables   
;    Q1...8 Axis Positions

;    M-variables   

CLOSE                       ; Make sure no buffer is open
M0..8191->*                 ; All M-variables are now self-referenced

; JI/O Port M-variables
M0-> Y:$78800,0,1           ;Input 1 Data Line, J6 Pin 1
M1-> Y:$78800,1,1           ;Input 2 Data Line, J6 Pin 20
M2-> Y:$78800,2,1           ;Input 3 Data Line, J6 Pin 2
M3-> Y:$78800,3,1           ;Input 4 Data Line, J6 Pin 21
M4-> Y:$78800,4,1           ;Input 5 Data Line, J6 Pin 3
M5-> Y:$78800,5,1           ;Input 6 Data Line, J6 Pin 22
M6-> Y:$78800,6,1           ;Input 7 Data Line, J6 Pin 4
M7-> Y:$78800,7,1           ;Input 8 Data Line, J6 Pin 23
M8-> Y:$78801,0,1           ;Input 9 Data Line, J6 Pin 5
M9-> Y:$78801,1,1           ;Input 10 Data Line, J6 Pin 24
M10-> Y:$78801,2,1          ;Input 11 Data Line, J6 Pin 6
M11-> Y:$78801,3,1          ;Input 12 Data Line, J6 Pin 25
M12-> Y:$78801,4,1          ;Input 13 Data Line, J6 Pin 7
M13-> Y:$78801,5,1          ;Input 14 Data Line, J6 Pin 26
M14-> Y:$78801,6,1          ;Input 15 Data Line, J6 Pin 8
M15-> Y:$78801,7,1          ;Input 16 Data Line, J6 Pin 27
M32-> Y:$078802,0,1         ;Output 1 Data Line Pin.. Source 12 / Sink 30
M33-> Y:$078802,1,1         ;Output 1 Data Line 13 / 31
M34-> Y:$078802,2,1         ;Output 1 Data Line 14 / 32
M35-> Y:$078802,3,1         ;Output 1 Data Line 15 / 33
M36-> Y:$078802,4,1         ;Output 1 Data Line 16 / 34
M37-> Y:$078802,5,1         ;Output 1 Data Line 17 / 35
M38-> Y:$078802,6,1         ;Output 1 Data Line 18 / 36
M39-> Y:$078802,7,1         ;Output 1 Data Line 19 / 37

; Miscellaneous global registers
M70->X:$FFFF8C,0,24         ; Time between phase interrupts (CPU cycles/2)
M71->X:$000037,0,24         ; Time for phase tasks (CPU cycles/2)
M72->Y:$000037,0,24         ; Time for servo tasks (CPU cycles/2)
M73->X:$00000B,0,24         ; Time for RTI tasks (CPU cycles/2)
M80->X:$000025,0,24         ; Minimum watchdog timer count
M81->X:$000024,0,24         ; Pointer to display buffer
M82->Y:$001080,0,8          ; First character of display buffer
M83->X:$000006,12,1         ; Firmware checksum error bit
M84->X:$000006,13,1         ; Any memory checksum error bit
M85->X:$000006,5,1          ; MACRO auxiliary communications error bit
M86->X:$000006,6,1          ; ACC-34 serial parity error bit

; Servo cycle counter (read only) -- counts up once per servo cycle
M100->X:$000000,0,24,S      ; 24-bit servo cycle counter

; Servo IC 0 Registers for PMAC2 Channel 1 (usually for Motor #1)
M101->X:$078001,0,24,S      ; ENC1 24-bit counter position
M102->Y:$078002,8,16,S      ; OUT1A command value; DAC or PWM
M103->X:$078003,0,24,S      ; ENC1 captured position
M104->Y:$078003,8,16,S      ; OUT1B command value; DAC or PWM
M105->Y:$078005,8,16,S      ; ADC1A input value
M106->Y:$078006,8,16,S      ; ADC1B input value
M107->Y:$078004,8,16,S      ; OUT1C command value; PFM or PWM
M108->Y:$078007,0,24,S      ; ENC1 compare A position
M109->X:$078007,0,24,S      ; ENC1 compare B position
M110->X:$078006,0,24,S      ; ENC1 compare autoincrement value
M111->X:$078005,11          ; ENC1 compare initial state write enable
M112->X:$078005,12          ; ENC1 compare initial state
M114->X:$078005,14          ; AENA1 output status
M115->X:$078000,19          ; USER1 flag input status
M116->X:$078000,9           ; ENC1 compare output value
M117->X:$078000,11          ; ENC1 capture flag
M118->X:$078000,8           ; ENC1 count error flag
M119->X:$078000,14          ; CHC1 input status
M120->X:$078000,16          ; HMFL1 flag input status
M121->X:$078000,17          ; PLIM1 flag input status
M122->X:$078000,18          ; MLIM1 flag input status
M123->X:$078000,15          ; FAULT1 flag input status
M124->X:$078000,20          ; Channel 1 W flag input status
M125->X:$078000,21          ; Channel 1 V flag input status
M126->X:$078000,22          ; Channel 1 U flag input status
M127->X:$078000,23          ; Channel 1 T flag input status
M128->X:$078000,20,4        ; Channel 1 TUVW inputs as 4-bit value

; Motor #1 Status Bits
M130->Y:$0000C0,11,1        ; #1 Stopped-on-position-limit bit
M131->X:$0000B0,21,1        ; #1 Positive-end-limit-set bit
M132->X:$0000B0,22,1        ; #1 Negative-end-limit-set bit
M133->X:$0000B0,13,1        ; #1 Desired-velocity-zero bit
M135->X:$0000B0,15,1        ; #1 Dwell-in-progress bit
M137->X:$0000B0,17,1        ; #1 Running-program bit
M138->X:$0000B0,18,1        ; #1 Open-loop-mode bit
M139->X:$0000B0,19,1        ; #1 Amplifier-enabled status bit
M140->Y:$0000C0,0,1         ; #1 Background in-position bit
M141->Y:$0000C0,1,1         ; #1 Warning-following error bit
M142->Y:$0000C0,2,1         ; #1 Fatal-following-error bit
M143->Y:$0000C0,3,1         ; #1 Amplifier-fault-error bit
M144->Y:$0000C0,13,1        ; #1 Foreground in-postion bit
M145->Y:$0000C0,10,1        ; #1 Home-complete bit
M146->Y:$0000C0,6,1         ; #1 Integrated following error fault bit
M147->Y:$0000C0,5,1         ; #1 I2T fault bit
M148->Y:$0000C0,8,1         ; #1 Phasing error fault bit
M149->Y:$0000C0,9,1         ; #1 Phasing search-in-progress bit

; MACRO IC 0 Node 0 Flag Registers (usually used for Motor #1)
M150->X:$003440,0,24        ; MACRO IC 0 Node 0 flag status register
M151->Y:$003440,0,24        ; MACRO IC 0 Node 0 flag command register
M153->X:$003440,20,4        ; MACRO IC 0 Node 0 TUVW flags
M154->Y:$003440,14,1        ; MACRO IC 0 Node 0 amplifier enable flag
M155->X:$003440,15,1        ; MACRO IC 0 Node 0 node/amplifier fault flag
M156->X:$003440,16,1        ; MACRO IC 0 Node 0 home flag
M157->X:$003440,17,1        ; MACRO IC 0 Node 0 positive limit flag
M158->X:$003440,18,1        ; MACRO IC 0 Node 0 negative limit flag
M159->X:$003440,19,1        ; MACRO IC 0 Node 0 user flag

; Motor #1 Move Registers
M161->D:$000088             ; #1 Commanded position (1/[Ixx08*32] cts)
M162->D:$00008B             ; #1 Actual position (1/[Ixx08*32] cts)
M163->D:$0000C7             ; #1 Target (end) position (1/[Ixx08*32] cts)
M164->D:$0000CC             ; #1 Position bias (1/[Ixx08*32] cts)
M166->X:$00009D,0,24,S      ; #1 Actual velocity (1/[Ixx09*32] cts/cyc)
M167->D:$00008D             ; #1 Present master pos (1/[Ixx07*32] cts)
M168->X:$0000BF,8,16,S      ; #1 Filter Output (16-bit DAC bits)
M169->D:$000090             ; #1 Compensation correction (1/[Ixx08*32] cts)
M170->D:$0000B4             ; #1 Present phase position (including fraction)
M171->X:$0000B4,24,S        ; #1 Present phase position (counts *Ixx70)
M172->L:$0000D7             ; #1 Variable jog position/distance (cts)
M173->Y:$0000CE,0,24,S      ; #1 Encoder home capture position (cts)
M174->D:$0000EF             ; #1 Averaged actual velocity (1/[Ixx09*32] cts/cyc)
M175->X:$0000B9,8,16,S      ; #1 Actual quadrature current
M176->Y:$0000B9,8,16,S      ; #1 Actual direct current
M177->X:$0000BC,8,16,S      ; #1 Quadrature current-loop integrator output
M178->Y:$0000BC,8,16,S      ; #1 Direct current-loop integrator output
M179->X:$0000AE,8,16,S      ; #1 PID internal filter result (16-bit DAC bits)

; Motor #1 Axis Definition Registers
M191->L:$0000CF             ; #1 X/U/A/B/C-Axis scale factor (cts/unit)
M192->L:$0000D0             ; #1 Y/V-Axis scale factor (cts/unit)
M193->L:$0000D1             ; #1 Z/W-Axis scale factor (cts/unit)
M194->L:$0000D2             ; #1 Axis offset (cts)

; Servo IC 0 Registers for PMAC2 Channel 2 (usually for Motor #2)
M201->X:$078009,0,24,S      ; ENC2 24-bit counter position
M202->Y:$07800A,8,16,S      ; OUT2A command value; DAC or PWM
M203->X:$07800B,0,24,S      ; ENC2 captured position
M204->Y:$07800B,8,16,S      ; OUT2B command value; DAC or PWM
M205->Y:$07800D,8,16,S      ; ADC2A input value
M206->Y:$07800E,8,16,S      ; ADC2B input value
M207->Y:$07800C,8,16,S      ; OUT2C command value; PFM or PWM
M208->Y:$07800F,0,24,S      ; ENC2 compare A position
M209->X:$07800F,0,24,S      ; ENC2 compare B position
M210->X:$07800E,0,24,S      ; ENC2 compare autoincrement value
M211->X:$07800D,11          ; ENC2 compare initial state write enable
M212->X:$07800D,12          ; ENC2 compare initial state
M214->X:$07800D,14          ; AENA2 output status
M215->X:$078008,19          ; USER2 flag input status
M216->X:$078008,9           ; ENC2 compare output value
M217->X:$078008,11          ; ENC2 capture flag
M218->X:$078008,8           ; ENC2 count error flag
M219->X:$078008,14          ; CHC2 input status
M220->X:$078008,16          ; HMFL2 flag input status
M221->X:$078008,17          ; PLIM2 flag input status
M222->X:$078008,18          ; MLIM2 flag input status
M223->X:$078008,15          ; FAULT2 flag input status
M224->X:$078008,20          ; Channel 2 W flag input status
M225->X:$078008,21          ; Channel 2 V flag input status
M226->X:$078008,22          ; Channel 2 U flag input status
M227->X:$078008,23          ; Channel 2 T flag input status
M228->X:$078008,20,4        ; Channel 2 TUVW inputs as 4-bit value

; Motor #2 Status Bits
M230->Y:$000140,11,1        ; #2 Stopped-on-position-limit bit
M231->X:$000130,21,1        ; #2 Positive-end-limit-set bit
M232->X:$000130,22,1        ; #2 Negative-end-limit-set bit
M233->X:$000130,13,1        ; #2 Desired-velocity-zero bit
M235->X:$000130,15,1        ; #2 Dwell-in-progress bit
M237->X:$000130,17,1        ; #2 Running-program bit
M238->X:$000130,18,1        ; #2 Open-loop-mode bit
M239->X:$000130,19,1        ; #2 Amplifier-enabled status bit
M240->Y:$000140,0,1         ; #2 Background in-position bit
M241->Y:$000140,1,1         ; #2 Warning-following error bit
M242->Y:$000140,2,1         ; #2 Fatal-following-error bit
M243->Y:$000140,3,1         ; #2 Amplifier-fault-error bit
M244->Y:$000140,13,1        ; #2 Foreground in-postion bit
M245->Y:$000140,10,1        ; #2 Home-complete bit
M246->Y:$000140,6,1         ; #2 Integrated following error fault bit
M247->Y:$000140,5,1         ; #2 I2T fault bit
M248->Y:$000140,8,1         ; #2 Phasing error fault bit
M249->Y:$000140,9,1         ; #2 Phasing search-in-progress bit

; MACRO IC 0 Node 1 Flag Registers (usually used for Motor #2)
M250->X:$003441,0,24        ; MACRO IC 0 Node 1 flag status register
M251->Y:$003441,0,24        ; MACRO IC 0 Node 1 flag command register
M253->X:$003441,20,4        ; MACRO IC 0 Node 1 TUVW flags
M254->Y:$003441,14,1        ; MACRO IC 0 Node 1 amplifier enable flag
M255->X:$003441,15,1        ; MACRO IC 0 Node 1 node/amplifier fault flag
M256->X:$003441,16,1        ; MACRO IC 0 Node 1 home flag
M257->X:$003441,17,1        ; MACRO IC 0 Node 1 positive limit flag
M258->X:$003441,18,1        ; MACRO IC 0 Node 1 negative limit flag
M259->X:$003441,19,1        ; MACRO IC 0 Node 1 user flag

; Motor #2 Move Registers
M261->D:$000108             ; #2 Commanded position (1/[Ixx08*32] cts)
M262->D:$00010B             ; #2 Actual position (1/[Ixx08*32] cts)
M263->D:$000147             ; #2 Target (end) position (1/[Ixx08*32] cts)
M264->D:$00014C             ; #2 Position bias (1/[Ixx08*32] cts)
M266->X:$00011D,0,24,S      ; #2 Actual velocity (1/[Ixx09*32] cts/cyc)
M267->D:$00010D             ; #2 Present master pos (1/[Ixx07*32] cts)
M268->X:$00013F,8,16,S      ; #2 Filter Output (16-bit DAC bits)
M269->D:$000110             ; #2 Compensation correction (1/[Ixx08*32] cts)
M270->D:$000134             ; #2 Present phase position (including fraction)
M271->X:$000134,24,S        ; #2 Present phase position (counts *Ixx70)
M272->L:$000157             ; #2 Variable jog position/distance (cts)
M273->Y:$00014E,0,24,S      ; #2 Encoder home capture position (cts)
M274->D:$00016F             ; #2 Averaged actual velocity (1/[Ixx09*32] cts/cyc)
M275->X:$000139,8,16,S      ; #2 Actual quadrature current
M276->Y:$000139,8,16,S      ; #2 Actual direct current
M277->X:$00013C,8,16,S      ; #2 Quadrature current-loop integrator output
M278->Y:$00013C,8,16,S      ; #2 Direct current-loop integrator output
M279->X:$00012E,8,16,S      ; #2 PID internal filter result (16-bit DAC bits)

; Motor #2 Axis Definition Registers
M291->L:$00014F             ; #2 X/U/A/B/C-Axis scale factor (cts/unit)
M292->L:$000150             ; #2 Y/V-Axis scale factor (cts/unit)
M293->L:$000151             ; #2 Z/W-Axis scale factor (cts/unit)
M294->L:$000152             ; #2 Axis offset (cts)

; Servo IC 0 Registers for PMAC2 Channel 3 (usually for Motor #3)
M301->X:$078011,0,24,S      ; ENC3 24-bit counter position
M302->Y:$078012,8,16,S      ; OUT3A command value; DAC or PWM
M303->X:$078013,0,24,S      ; ENC3 captured position
M304->Y:$078013,8,16,S      ; OUT3B command value; DAC or PWM
M305->Y:$078015,8,16,S      ; ADC3A input value
M306->Y:$078016,8,16,S      ; ADC3B input value
M307->Y:$078014,8,16,S      ; OUT3C command value; PFM or PWM
M308->Y:$078017,0,24,S      ; ENC3 compare A position
M309->X:$078017,0,24,S      ; ENC3 compare B position
M310->X:$078016,0,24,S      ; ENC3 compare autoincrement value
M311->X:$078015,11          ; ENC3 compare initial state write enable
M312->X:$078015,12          ; ENC3 compare initial state
M314->X:$078015,14          ; AENA3 output status
M315->X:$078010,19          ; USER3 flag input status
M316->X:$078010,9           ; ENC3 compare output value
M317->X:$078010,11          ; ENC3 capture flag
M318->X:$078010,8           ; ENC3 count error flag
M319->X:$078010,14          ; CHC3 input status
M320->X:$078010,16          ; HMFL3 flag input status
M321->X:$078010,17          ; PLIM3 flag input status
M322->X:$078010,18          ; MLIM3 flag input status
M323->X:$078010,15          ; FAULT3 flag input status
M324->X:$078010,20          ; Channel 3 W flag input status
M325->X:$078010,21          ; Channel 3 V flag input status
M326->X:$078010,22          ; Channel 3 U flag input status
M327->X:$078010,23          ; Channel 3 T flag input status
M328->X:$078010,20,4        ; Channel 3 TUVW inputs as 4-bit value

; Motor #3 Status Bits
M330->Y:$0001C0,11,1        ; #3 Stopped-on-position-limit bit
M331->X:$0001B0,21,1        ; #3 Positive-end-limit-set bit
M332->X:$0001B0,22,1        ; #3 Negative-end-limit-set bit
M333->X:$0001B0,13,1        ; #3 Desired-velocity-zero bit
M335->X:$0001B0,15,1        ; #3 Dwell-in-progress bit
M337->X:$0001B0,17,1        ; #3 Running-program bit
M338->X:$0001B0,18,1        ; #3 Open-loop-mode bit
M339->X:$0001B0,19,1        ; #3 Amplifier-enabled status bit
M340->Y:$0001C0,0,1         ; #3 Background in-position bit
M341->Y:$0001C0,1,1         ; #3 Warning-following error bit
M342->Y:$0001C0,2,1         ; #3 Fatal-following-error bit
M343->Y:$0001C0,3,1         ; #3 Amplifier-fault-error bit
M344->Y:$0001C0,13,1        ; #3 Foreground in-postion bit
M345->Y:$0001C0,10,1        ; #3 Home-complete bit
M346->Y:$0001C0,6,1         ; #3 Integrated following error fault bit
M347->Y:$0001C0,5,1         ; #3 I2T fault bit
M348->Y:$0001C0,8,1         ; #3 Phasing error fault bit
M349->Y:$0001C0,9,1         ; #3 Phasing search-in-progress bit

; MACRO IC 0 Node 4 Flag Registers (usually used for Motor #3)
M350->X:$003444,0,24        ; MACRO IC 0 Node 4 flag status register
M351->Y:$003444,0,24        ; MACRO IC 0 Node 4 flag command register
M353->X:$003444,20,4        ; MACRO IC 0 Node 4 TUVW flags
M354->Y:$003444,14,1        ; MACRO IC 0 Node 4 amplifier enable flag
M355->X:$003444,15,1        ; MACRO IC 0 Node 4 node/amplifier fault flag
M356->X:$003444,16,1        ; MACRO IC 0 Node 4 home flag
M357->X:$003444,17,1        ; MACRO IC 0 Node 4 positive limit flag
M358->X:$003444,18,1        ; MACRO IC 0 Node 4 negative limit flag
M359->X:$003444,19,1        ; MACRO IC 0 Node 4 user flag

; Motor #3 Move Registers
M361->D:$000188             ; #3 Commanded position (1/[Ixx08*32] cts)
M362->D:$00018B             ; #3 Actual position (1/[Ixx08*32] cts)
M363->D:$0001C7             ; #3 Target (end) position (1/[Ixx08*32] cts)
M364->D:$0001CC             ; #3 Position bias (1/[Ixx08*32] cts)
M366->X:$00019D,0,24,S      ; #3 Actual velocity (1/[Ixx09*32] cts/cyc)
M367->D:$00018D             ; #3 Present master pos (1/[Ixx07*32] cts)
M368->X:$0001BF,8,16,S      ; #3 Filter Output (16-bit DAC bits)
M369->D:$000190             ; #3 Compensation correction (1/[Ixx08*32] cts)
M370->D:$0001B4             ; #3 Present phase position (including fraction)
M371->X:$0001B4,24,S        ; #3 Present phase position (counts *Ixx70)
M372->L:$0001D7             ; #3 Variable jog position/distance (cts)
M373->Y:$0001CE,0,24,S      ; #3 Encoder home capture position (cts)
M374->D:$0001EF             ; #3 Averaged actual velocity (1/[Ixx09*32] cts/cyc)
M375->X:$0001B9,8,16,S      ; #3 Actual quadrature current
M376->Y:$0001B9,8,16,S      ; #3 Actual direct current
M377->X:$0001BC,8,16,S      ; #3 Quadrature current-loop integrator output
M378->Y:$0001BC,8,16,S      ; #3 Direct current-loop integrator output
M379->X:$0001AE,8,16,S      ; #3 PID internal filter result (16-bit DAC bits)

; Motor #3 Axis Definition Registers
M391->L:$0001CF             ; #3 X/U/A/B/C-Axis scale factor (cts/unit)
M392->L:$0001D0             ; #3 Y/V-Axis scale factor (cts/unit)
M393->L:$0001D1             ; #3 Z/W-Axis scale factor (cts/unit)
M394->L:$0001D2             ; #3 Axis offset (cts)


; Servo IC 0 Registers for PMAC2 Channel 4 (usually for Motor #4)
M401->X:$078019,0,24,S      ; ENC4 24-bit counter position
M402->Y:$07801A,8,16,S      ; OUT4A command value; DAC or PWM
M403->X:$07801B,0,24,S      ; ENC4 captured position
M404->Y:$07801B,8,16,S      ; OUT4B command value; DAC or PWM
M405->Y:$07801D,8,16,S      ; ADC4A input value
M406->Y:$07801E,8,16,S      ; ADC4B input value
M407->Y:$07801C,8,16,S      ; OUT4C command value; PFM or PWM
M408->Y:$07801F,0,24,S      ; ENC4 compare A position
M409->X:$07801F,0,24,S      ; ENC4 compare B position
M410->X:$07801E,0,24,S      ; ENC4 compare autoincrement value
M411->X:$07801D,11          ; ENC4 compare initial state write enable
M412->X:$07801D,12          ; ENC4 compare initial state
M414->X:$07801D,14          ; AENA4 output status
M415->X:$078018,19          ; USER4 flag input status
M416->X:$078018,9           ; ENC4 compare output value
M417->X:$078018,11          ; ENC4 capture flag
M418->X:$078018,8           ; ENC4 count error flag
M419->X:$078018,14          ; HMFL4 flag input status
M420->X:$078018,16          ; CHC4 input status
M421->X:$078018,17          ; PLIM4 flag input status
M422->X:$078018,18          ; MLIM4 flag input status
M423->X:$078018,15          ; FAULT4 flag input status
M424->X:$078018,20          ; Channel 4 W flag input status
M425->X:$078018,21          ; Channel 4 V flag input status
M426->X:$078018,22          ; Channel 4 U flag input status
M427->X:$078018,23          ; Channel 4 T flag input status
M428->X:$078018,20,4        ; Channel 4 TUVW inputs as 4-bit value

; Motor #4 Status Bits
M430->Y:$000240,11,1        ; #4 Stopped-on-position-limit bit
M431->X:$000230,21,1        ; #4 Positive-end-limit-set bit
M432->X:$000230,22,1        ; #4 Negative-end-limit-set bit
M433->X:$000230,13,1        ; #4 Desired-velocity-zero bit
M435->X:$000230,15,1        ; #4 Dwell-in-progress bit
M437->X:$000230,17,1        ; #4 Running-program bit
M438->X:$000230,18,1        ; #4 Open-loop-mode bit
M439->X:$000230,19,1        ; #4 Amplifier-enabled status bit
M440->Y:$000240,0,1         ; #4 Background in-position bit
M441->Y:$000240,1,1         ; #4 Warning-following error bit
M442->Y:$000240,2,1         ; #4 Fatal-following-error bit
M443->Y:$000240,3,1         ; #4 Amplifier-fault-error bit
M444->Y:$000240,13,1        ; #2 Foreground in-postion bit
M445->Y:$000240,10,1        ; #4 Home-complete bit
M446->Y:$000240,6,1         ; #4 Integrated following error fault bit
M447->Y:$000240,5,1         ; #4 I2T fault bit
M448->Y:$000240,8,1         ; #4 Phasing error fault bit
M449->Y:$000240,9,1         ; #4 Phasing search-in-progress bit

; MACRO IC 0 Node 5 Flag Registers (usually used for Motor #4)
M450->X:$003445,0,24        ; MACRO IC 0 Node 5 flag status register
M451->Y:$003445,0,24        ; MACRO IC 0 Node 5 flag command register
M453->X:$003445,20,4        ; MACRO IC 0 Node 5 TUVW flags
M454->Y:$003445,14,1        ; MACRO IC 0 Node 5 amplifier enable flag
M455->X:$003445,15,1        ; MACRO IC 0 Node 5 node/amplifier fault flag
M456->X:$003445,16,1        ; MACRO IC 0 Node 5 home flag
M457->X:$003445,17,1        ; MACRO IC 0 Node 5 positive limit flag
M458->X:$003445,18,1        ; MACRO IC 0 Node 5 negative limit flag
M459->X:$003445,19,1        ; MACRO IC 0 Node 5 user flag

; Motor #4 Move Registers
M461->D:$000208             ; #4 Commanded position (1/[Ixx08*32] cts)
M462->D:$00020B             ; #4 Actual position (1/[Ixx08*32] cts)
M463->D:$000247             ; #4 Target (end) position (1/[Ixx08*32] cts)
M464->D:$00024C             ; #4 Position bias (1/[Ixx08*32] cts)
M466->X:$00021D,0,24,S      ; #4 Actual velocity (1/[Ixx09*32] cts/cyc)
M467->D:$00020D             ; #4 Present master pos (1/[Ixx07*32] cts)
M468->X:$00023F,8,16,S      ; #4 Filter Output (16-bit DAC bits)
M469->D:$000210             ; #4 Compensation correction (1/[Ixx08*32] cts)
M470->D:$000234             ; #4 Present phase position (including fraction)
M471->X:$000234,24,S        ; #4 Present phase position (counts *Ixx70)
M472->L:$000257             ; #4 Variable jog position/distance (cts)
M473->Y:$00024E,0,24,S      ; #4 Encoder home capture position (cts)
M474->D:$00026F             ; #4 Averaged actual velocity (1/[Ixx09*32] cts/cyc)
M475->X:$000239,8,16,S      ; #4 Actual quadrature current
M476->Y:$000239,8,16,S      ; #4 Actual direct current
M477->X:$00023C,8,16,S      ; #4 Quadrature current-loop integrator output
M478->Y:$00023C,8,16,S      ; #4 Direct current-loop integrator output
M479->X:$00022E,8,16,S      ; #4 PID internal filter result (16-bit DAC bits)

; Motor #4 Axis Definition Registers
M491->L:$00024F             ; #4 X/U/A/B/C-Axis scale factor (cts/unit)
M492->L:$000250             ; #4 Y/V-Axis scale factor (cts/unit)
M493->L:$000251             ; #4 Z/W-Axis scale factor (cts/unit)
M494->L:$000252             ; #4 Axis offset (cts)

; Servo IC 1 Registers for PMAC2 Channel 5 (usually for Motor #5)
M501->X:$078101,0,24,S      ; ENC5 24-bit counter position
M502->Y:$078102,8,16,S      ; OUT5A command value; DAC or PWM
M503->X:$078103,0,24,S      ; ENC5 captured position
M504->Y:$078103,8,16,S      ; OUT5B command value; DAC or PWM
M505->Y:$078105,8,16,S      ; ADC5A input value
M506->Y:$078106,8,16,S      ; ADC5B input value
M507->Y:$078104,8,16,S      ; OUT5C command value; PFM or PWM
M508->Y:$078107,0,24,S      ; ENC5 compare A position
M509->X:$078107,0,24,S      ; ENC5 compare B position
M510->X:$078106,0,24,S      ; ENC5 compare autoincrement value
M511->X:$078105,11          ; ENC5 compare initial state write enable
M512->X:$078105,12          ; ENC5 compare initial state
M514->X:$078105,14          ; AENA5 output status
M515->X:$078100,19          ; USER5 flag input status
M516->X:$078100,9           ; ENC5 compare output value
M517->X:$078100,11          ; ENC5 capture flag
M518->X:$078100,8           ; ENC5 count error flag
M519->X:$078100,14          ; CHC5 input status
M520->X:$078100,16          ; HMFL5 flag input status
M521->X:$078100,17          ; PLIM5 flag input status
M522->X:$078100,18          ; MLIM5 flag input status
M523->X:$078100,15          ; FAULT5 flag input status
M524->X:$078100,20          ; Channel 5 W flag input status
M525->X:$078100,21          ; Channel 5 V flag input status
M526->X:$078100,22          ; Channel 5 U flag input status
M527->X:$078100,23          ; Channel 5 T flag input status
M528->X:$078100,20,4        ; Channel 5 TUVW inputs as 4-bit value

; Coordinate System 1 (&1) timers
M5111->X:$002015,0,24,S     ; &1 Isx11 timer (for synchronous assignment)
M5112->Y:$002015,0,24,S     ; &1 Isx12 timer (for synchronous assignment)

; Coordinate System 1 (&1) end-of-calculated-move positions
M5141->L:$002041            ; &1 A-axis target position (engineering units)
M5142->L:$002042            ; &1 B-axis target position (engineering units)
M5143->L:$002043            ; &1 C-axis target position (engineering units)
M5144->L:$002044            ; &1 U-axis target position (engineering units)
M5145->L:$002045            ; &1 V-axis target position (engineering units)
M5146->L:$002046            ; &1 W-axis target position (engineering units)
M5147->L:$002047            ; &1 X-axis target position (engineering units)
M5148->L:$002048            ; &1 Y-axis target position (engineering units)
M5149->L:$002049            ; &1 Z-axis target position (engineering units)

; Coordinate System 1 (&1) Status Bits
M5180->X:$002040,0,1        ; &1 Program-running bit
M5181->Y:$00203F,21,1       ; &1 Circle-radius-error bit
M5182->Y:$00203F,22,1       ; &1 Run-time-error bit
M5184->X:$002040,0,4        ; &1 Continuous motion request
M5187->Y:$00203F,17,1       ; &1 In-position bit (AND of motors)
M5188->Y:$00203F,18,1       ; &1 Warning-following-error bit (OR)
M5189->Y:$00203F,19,1       ; &1 Fatal-following-error bit (OR)
M5190->Y:$00203F,20,1       ; &1 Amp-fault-error bit (OR of motors)

; Coordinate System 1 (&1) Variables
M5197->X:$002000,0,24,S ; &1 Host commanded time base (I10 units)
M5198->X:$002002,0,24,S ; &1 Present time base (I10 units)

; Coordinate System 2 (&2) timers
M5211->X:$002115,0,24,S     ; &2 Isx11 timer (for synchronous assignment)
M5212->Y:$002115,0,24,S     ; &2 Isx12 timer (for synchronous assignment)

; Coordinate System 2 (&2) end-of-calculated-move positions
M5241->L:$002141            ; &2 A-axis target position (engineering units)
M5242->L:$002142            ; &2 B-axis target position (engineering units)
M5243->L:$002143            ; &2 C-axis target position (engineering units)
M5244->L:$002144            ; &2 U-axis target position (engineering units)
M5245->L:$002145            ; &2 V-axis target position (engineering units)
M5246->L:$002146            ; &2 W-axis target position (engineering units)
M5247->L:$002147            ; &2 X-axis target position (engineering units)
M5248->L:$002148            ; &2 Y-axis target position (engineering units)
M5249->L:$002149            ; &2 Z-axis target position (engineering units)

; Coordinate System 2 (&2) Status Bits
M5280->X:$002140,0,1        ; &2 Program-running bit
M5281->Y:$00213F,21,1       ; &2 Circle-radius-error bit
M5282->Y:$00213F,22,1       ; &2 Run-time-error bit
M5284->X:$002140,0,4        ; &2 Continuous motion request
M5287->Y:$00213F,17,1       ; &2 In-position bit (AND of motors)
M5288->Y:$00213F,18,1       ; &2 Warning-following-error bit (OR)
M5289->Y:$00213F,19,1       ; &2 Fatal-following-error bit (OR)
M5290->Y:$00213F,20,1       ; &2 Amp-fault-error bit (OR of motors)

; Coordinate System 2 (&2) Variables
M5297->X:$002100,0,24,S     ; &2 Host commanded time base (I10 units)
M5298->X:$002102,0,24,S     ; &2 Present time base (I10 units)
M6541->L:$002E41            ; &15 A-axis target position (engineering units)
M6542->L:$002E42            ; &15 B-axis target position (engineering units)
M6543->L:$002E43            ; &15 C-axis target position (engineering units)
M6544->L:$002E44            ; &15 U-axis target position (engineering units)
M6545->L:$002E45            ; &15 V-axis target position (engineering units)
M6546->L:$002E46            ; &15 W-axis target position (engineering units)
M6547->L:$002E47            ; &15 X-axis target position (engineering units)
M6548->L:$002E48            ; &15 Y-axis target position (engineering units)
M6549->L:$002E49            ; &15 Z-axis target position (engineering units)

; Encoder Conversion Table Result Registers (M8xxx matches I8xxx)
M8000->X:$003501,0,24,S     ; Line 0 result from conversion table
M8001->X:$003502,0,24,S     ; Line 1 result from conversion table
M8002->X:$003503,0,24,S     ; Line 2 result from conversion table
M8003->X:$003504,0,24,S     ; Line 3 result from conversion table
M8004->X:$003505,0,24,S     ; Line 4 result from conversion table
M8005->X:$003506,0,24,S     ; Line 5 result from conversion table
M8006->X:$003507,0,24,S     ; Line 6 result from conversion table
M8007->X:$003508,0,24,S     ; Line 7 result from conversion table
M8008->X:$003509,0,24,S     ; Line 8 result from conversion table
M8009->X:$00350A,0,24,S     ; Line 9 result from conversion table
M8010->X:$00350B,0,24,S     ; Line 10 result from conversion table
M8011->X:$00350C,0,24,S     ; Line 11 result from conversion table
M8012->X:$00350D,0,24,S     ; Line 12 result from conversion table
M8013->X:$00350E,0,24,S     ; Line 13 result from conversion table
M8014->X:$00350F,0,24,S     ; Line 14 result from conversion table
M8015->X:$003510,0,24,S     ; Line 15 result from conversion table
M8016->X:$003511,0,24,S     ; Line 16 result from conversion table
M8017->X:$003512,0,24,S     ; Line 17 result from conversion table
M8018->X:$003513,0,24,S     ; Line 18 result from conversion table
M8019->X:$003514,0,24,S     ; Line 19 result from conversion table
M8020->X:$003515,0,24,S     ; Line 20 result from conversion table
M8021->X:$003516,0,24,S     ; Line 21 result from conversion table
M8022->X:$003517,0,24,S     ; Line 22 result from conversion table
M8023->X:$003518,0,24,S     ; Line 23 result from conversion table
M8024->X:$003519,0,24,S     ; Line 24 result from conversion table
M8025->X:$00351A,0,24,S     ; Line 25 result from conversion table
M8026->X:$00351B,0,24,S     ; Line 26 result from conversion table
M8027->X:$00351C,0,24,S     ; Line 27 result from conversion table
M8028->X:$00351D,0,24,S     ; Line 28 result from conversion table
M8029->X:$00351E,0,24,S     ; Line 29 result from conversion table
M8030->X:$00351F,0,24,S     ; Line 30 result from conversion table
M8031->X:$003520,0,24,S     ; Line 31 result from conversion table
M8032->X:$003521,0,24,S     ; Line 32 result from conversion table
M8033->X:$003522,0,24,S     ; Line 33 result from conversion table
M8034->X:$003523,0,24,S     ; Line 34 result from conversion table
M8035->X:$003524,0,24,S     ; Line 35 result from conversion table
M8036->X:$003525,0,24,S     ; Line 36 result from conversion table
M8037->X:$003526,0,24,S     ; Line 37 result from conversion table
M8038->X:$003527,0,24,S     ; Line 38 result from conversion table
M8039->X:$003528,0,24,S     ; Line 39 result from conversion table
M8040->X:$003529,0,24,S     ; Line 40 result from conversion table
M8041->X:$00352A,0,24,S     ; Line 41 result from conversion table
M8042->X:$00352B,0,24,S     ; Line 42 result from conversion table
M8043->X:$00352C,0,24,S     ; Line 43 result from conversion table
M8044->X:$00352D,0,24,S     ; Line 44 result from conversion table
M8045->X:$00352E,0,24,S     ; Line 45 result from conversion table
M8046->X:$00352F,0,24,S     ; Line 46 result from conversion table
M8047->X:$003530,0,24,S     ; Line 47 result from conversion table
M8048->X:$003531,0,24,S     ; Line 48 result from conversion table
M8049->X:$003532,0,24,S     ; Line 49 result from conversion table
M8050->X:$003533,0,24,S     ; Line 50 result from conversion table
M8051->X:$003534,0,24,S     ; Line 51 result from conversion table
M8052->X:$003535,0,24,S     ; Line 52 result from conversion table
M8053->X:$003536,0,24,S     ; Line 53 result from conversion table
M8054->X:$003537,0,24,S     ; Line 54 result from conversion table
M8055->X:$003538,0,24,S     ; Line 55 result from conversion table
M8056->X:$003539,0,24,S     ; Line 56 result from conversion table
M8057->X:$00353A,0,24,S     ; Line 57 result from conversion table
M8058->X:$00353B,0,24,S     ; Line 58 result from conversion table
M8059->X:$00353C,0,24,S     ; Line 59 result from conversion table
M8060->X:$00353D,0,24,S     ; Line 60 result from conversion table
M8061->X:$00353E,0,24,S     ; Line 61 result from conversion table
M8062->X:$00353F,0,24,S     ; Line 62 result from conversion table
M8063->X:$003540,0,24,S     ; Line 63 result from conversion table


;####################################################
; This section contains additional DLS M variables for PMAC or GeoBrick
; These are used in various PLCs distributed in pmacUtil
;####################################################

; Set up the M-variables to look for the CS number
m185->Y:$0000C0,20,4
m285->Y:$000140,20,4
m385->Y:$0001C0,20,4
m485->Y:$000240,20,4
m585->Y:$0002C0,20,4
m685->Y:$000340,20,4
m785->Y:$0003C0,20,4
m885->Y:$000440,20,4
m985->Y:$0004C0,20,4
m1085->Y:$000540,20,4
m1185->Y:$0005C0,20,4
m1285->Y:$000640,20,4
m1385->Y:$0006C0,20,4
m1485->Y:$000740,20,4
m1585->Y:$0007C0,20,4
m1685->Y:$000840,20,4
m1785->Y:$0008C0,20,4
m1885->Y:$000940,20,4
m1985->Y:$0009C0,20,4
m2085->Y:$000A40,20,4
m2185->Y:$000AC0,20,4
m2285->Y:$000B40,20,4
m2385->Y:$000BC0,20,4
m2485->Y:$000C40,20,4
m2585->Y:$000CC0,20,4
m2685->Y:$000D40,20,4
m2785->Y:$000DC0,20,4
m2885->Y:$000E40,20,4
m2985->Y:$000EC0,20,4
m3085->Y:$000F40,20,4
m3185->Y:$000FC0,20,4
m3285->Y:$001040,20,4

; Set up the M-variables to see if the motor is in a CS
m186->Y:$0000C0,15,1
m286->Y:$000140,15,1
m386->Y:$0001C0,15,1
m486->Y:$000240,15,1
m586->Y:$0002C0,15,1
m686->Y:$000340,15,1
m786->Y:$0003C0,15,1
m886->Y:$000440,15,1
m986->Y:$0004C0,15,1
m1086->Y:$000540,15,1
m1186->Y:$0005C0,15,1
m1286->Y:$000640,15,1
m1386->Y:$0006C0,15,1
m1486->Y:$000740,15,1
m1586->Y:$0007C0,15,1
m1686->Y:$000840,15,1
m1786->Y:$0008C0,15,1
m1886->Y:$000940,15,1
m1986->Y:$0009C0,15,1
m2086->Y:$000A40,15,1
m2186->Y:$000AC0,15,1
m2286->Y:$000B40,15,1
m2386->Y:$000BC0,15,1
m2486->Y:$000C40,15,1
m2586->Y:$000CC0,15,1
m2686->Y:$000D40,15,1
m2786->Y:$000DC0,15,1
m2886->Y:$000E40,15,1
m2986->Y:$000EC0,15,1
m3086->Y:$000F40,15,1
m3186->Y:$000FC0,15,1
m3286->Y:$001040,15,1

;####################################################
; Note on memory from P381 of PMAC USER MANUAL
; For general data memory, most users will utilize some of Turbo PMAC’s 8192 P-variables for 
; floatingpoint
; values. If just a few open registers are desired for use, the registers at X/Y:$0010F0 –
; X/Y:$0010FF are unused by any firmware task, other than to be zeroed automatically at
; power-up/reset.
;####################################################
; This is used by PLC1 to test whether it has been run yet
; M4900->Y:$0010F0,0,1
; These are used by autosave to tell if an axis has been restored
; Axis 1-16
M4901->Y:$0010F1,0,1
M4902->Y:$0010F1,1,1
M4903->Y:$0010F1,2,1
M4904->Y:$0010F1,3,1
M4905->Y:$0010F1,4,1
M4906->Y:$0010F1,5,1
M4907->Y:$0010F1,6,1
M4908->Y:$0010F1,7,1
M4909->Y:$0010F1,8,1
M4910->Y:$0010F1,9,1
M4911->Y:$0010F1,10,1
M4912->Y:$0010F1,11,1
M4913->Y:$0010F1,12,1
M4914->Y:$0010F1,13,1
M4915->Y:$0010F1,14,1
M4916->Y:$0010F1,15,1

; This is always set to $60000 in PLC1 so it can be used to tell an axis
; "your limits are on, stop now"
; Set ixx43 to $10FF to redirect limits to this variable

M4965->X:$0010FF,0,24

; M variables to determine whether PLCs are running
; from "Turbo PMAC/PMAC2 Software Reference Manual"
M5000->Y:$003100,22,1      ; PLC 0
M5001->Y:$003101,22,1      ; PLC 1
M5002->Y:$003102,22,1      ; PLC 2
M5003->Y:$003103,22,1      ; PLC 3
M5004->Y:$003104,22,1      ; PLC 4
M5005->Y:$003105,22,1      ; PLC 5
M5006->Y:$003106,22,1      ; PLC 6
M5007->Y:$003107,22,1      ; PLC 7

;Macro ring errors
M5035->X:$003430,0,24      ; Total MACRO ring error count (from power-up/reset)
M5036->Y:$003430,0,24      ; Latest check-cycle MACRO ring error count

;############################################################
; This section contains additional DLS M variables for GeoBrick only
;############################################################
; Set up the M-variable definitions to point to
; the encoder loss memory locations
M184->Y:$78807,0
M284->Y:$78807,1
M384->Y:$78807,2
M484->Y:$78807,3
M584->Y:$78807,4
M684->Y:$78807,5
M784->Y:$78807,6
M884->Y:$78807,7

; Set up position compare output readout registers
M113->X:$078000,9
M213->X:$078008,9
M313->X:$078010,9
M413->X:$078018,9
M513->X:$078100,9
M613->X:$078108,9
M713->X:$078110,9
M813->X:$078118,9

; Look at amplifier mode bit
M189->Y:$78005,9
M289->Y:$7800D,9
M389->Y:$78015,9
M489->Y:$7801D,9
M589->Y:$78105,9
M689->Y:$7810D,9
M789->Y:$78115,9
M889->Y:$7811D,9

; Look at amplifier status flags
M190->Y:$78005,0,16
M290->Y:$7800D,0,16
M390->Y:$78015,0,16
M490->Y:$7801D,0,16
M590->Y:$78105,0,16
M690->Y:$7810D,0,16
M790->Y:$78115,0,16
M890->Y:$7811D,0,16

; Set up motion stop
M7647->Y:$70801,5,1

;    I-variables                           
;                Software Reference Manual name                             Defaults
;
;               I0 - I99 PMAC setup control
I5=2            ;PLC Program Control                                        0 or 1
I10=1705244     ;Servo Interrupt Time                                       3713991
I52=7           ;CPU Frequency Control  [10*(I52+1) = 160MHz]               7
I68=2
;               I100-I4899 Motor Set Up
;Motor 1
I102=$78004     ;Ixx02 Motor xx Command Output Address PMAC                 $78002
I112=3200       ;Ixx12 Motor xx Warning Following Error Limit               16000
I113=250000     ;Ixx13 Motor xx Positive Software Position Limit            0
I114=-250000    ;Ixx14 Motor xx Negative Software Position Limit            0
I115=50         ;Ixx15 Motor xx Abort/Limit Deceleration Rate               0.25
I116=200        ;Ixx16 Motor xx Maximum Program Velocity                    32.0
I117=50         ;Ixx17 Motor xx Maximum Program Acceleration                0.015625
I119=50         ;Ixx19 Motor xx Maximum Jog/Home Acceleration               0.015625
I121=0          ;Ixx21 Motor xx Jog/Home S-Curve Time                       50
I122=160        ;Ixx22 Motor xx Jog Speed                                   32.0
I123=16         ;Ixx23 Motor xx Home Speed and Direction                    32.0
I124=$C00401    ;Ixx24 Motor xx Flag Mode Control                           $000000
I128=480        ;Ixx28 Motor xx In-Position Band                            160
I130=6000       ;Ixx30 Motor xx PID Proportional Gain                       2000
I131=0          ;Ixx31 Motor xx PID Derivative Gain                         1280
I132=3820       ;Ixx32 Motor xx PID Velocity Feedforward Gain               1280
I135=100000     ;Ixx35 Motor xx PID Acceleration Feedforward Gain           0
I161=0.5        ;Ixx61 Motor xx Current-Loop Integral Gain                  0
I164=-16        ;Ixx64 Motor xx Deadband Gain Factor                        0
I165=32         ;Ixx65 Motor xx Deadband Size                               16
I166=1620       ;Ixx66 Motor xx PWM Scale Factor                            6527
I169=7000       ;Ixx69 Motor xx Output Command Limit                        20480
I171=4096       ;Ixx71 Motor xx Counts per N Commutation Cycles             1000
I172=512        ;Ixx72 Motor xx Commutation Phase Angle                     1365
I176=0.2        ;Ixx76 Motor xx Current-Loop Back-Path Proportional Gain    0.0
I184=$FFFC00    ;Ixx84 Motor xx Current-Loop Feedback Mask Word             $0
I191=$4C0000    ;Ixx91 Motor xx Power-On Phase Position Format              $0
I197=1          ;Ixx97 Motor xx Position Capture & Trigger Mode             0

;Motor 2
I200=1          ;Ixx00 Motor xx Activation Control                          0
I202=$7800C     ;Ixx02 Motor xx Command Output Address PMAC                 $7800A
I212=3200       ;Ixx12 Motor xx Warning Following Error Limit               16000
I213=5000000    ;Ixx13 Motor xx Positive Software Position Limit            0
I214=-5000000   ;Ixx14 Motor xx Negative Software Position Limit            0
I215=1000       ;Ixx15 Motor xx Abort/Limit Deceleration Rate               0.25
I216=200        ;Ixx16 Motor xx Maximum Program Velocity                    32.0
I217=50         ;Ixx17 Motor xx Maximum Program Acceleration                0.015625
I219=50         ;Ixx19 Motor xx Maximum Jog/Home Acceleration               0.015625
I221=0          ;Ixx21 Motor xx Jog/Home S-Curve Time                       50
I222=1000       ;Ixx22 Motor xx Jog Speed                                   32.0
I223=1000       ;Ixx23 Motor xx Home Speed and Direction                    32.0
I224=$C20401    ;Ixx24 Motor xx Flag Mode Control                           $1
I228=480        ;Ixx28 Motor xx In-Position Band                            160
I230=6000       ;Ixx30 Motor xx PID Proportional Gain                       2000
I231=0          ;Ixx31 Motor xx PID Derivative Gain                         1280
I232=3820       ;Ixx32 Motor xx PID Velocity Feedforward Gain               1280
I235=100000     ;Ixx35 Motor xx PID Acceleration Feedforward Gain           0
I261=0.049999952;Ixx61 Motor xx Current-Loop Integral Gain                  0
I264=-16        ;Ixx64 Motor xx Deadband Gain Factor                        0
I265=32         ;Ixx65 Motor xx Deadband Size                               16
I266=1620       ;Ixx66 Motor xx PWM Scale Factor                            6527
I269=7000       ;Ixx69 Motor xx Output Command Limit                        20480
I271=4096       ;Ixx71 Motor xx Counts per N Commutation Cycles             1000
I272=512        ;Ixx72 Motor xx Commutation Phase Angle                     1365
I276=0.199999809;Ixx76 Motor xx Current-Loop Back-Path Proportional Gain    0.0
I277=1000       ;Ixx77 Motor xx Magnetization Current                       0
I281=$350E      ;Ixx81 Motor xx Power-On Phase Position Address             $0
I282=$7800E     ;Ixx82 Motor xx Current-Loop Feedback Address               $0
I283=$350E      ;Ixx83 Motor xx Commutation Position Address values         $78009
I284=$FFFC00    ;Ixx84 Motor xx Current-Loop Feedback Mask Word             $0
I291=$4C0000    ;Ixx91 Motor xx Power-On Phase Position Format              $0
I297=1          ;Ixx97 Motor xx Position Capture & Trigger Mode             0

;Motor 3
I300=1          ;Ixx00 Motor xx Activation Control                          0
I302=$78014     ;Ixx02 Motor xx Command Output Address PMAC                 $78012
I312=3200       ;Ixx12 Motor xx Warning Following Error Limit               16000
I313=30000      ;Ixx13 Motor xx Positive Software Position Limit            0
I314=-30000     ;Ixx14 Motor xx Negative Software Position Limit            0
I315=1000       ;Ixx1Motor xx Abort/Limit Deceleration Rate               0.25
I316=200        ;Ixx16 Motor xx Maximum Program Velocity                    32.0
I317=50         ;Ixx17 Motor xx Maximum Program Acceleration                0.015625
I319=50         ;Ixx19 Motor xx Maximum Jog/Home Acceleration               0.015625
I321=0          ;Ixx21 Motor xx Jog/Home S-Curve Time                       50
I322=1000       ;Ixx22 Motor xx Jog Speed                                   32.0
I323=1000       ;Ixx23 Motor xx Home Speed and Direction                    32.0
I324=$C20401    ;Ixx24 Motor xx Flag Mode Control                           $1
I328=480        ;Ixx28 Motor xx In-Position Band                            160
I330=6000       ;Ixx30 Motor xx PID Proportional Gain                       2000
I331=0          ;Ixx31 Motor xx PID Derivative Gain                         1280
I332=3820       ;Ixx32 Motor xx PID Velocity Feedforward Gain               1280
I335=100000     ;Ixx35 Motor xx PID Acceleration Feedforward Gain           0
I361=0.049999952;Ixx61 Motor xx Current-Loop Integral Gain                  0
I364=-16        ;Ixx64 Motor xx Deadband Gain Factor                        0
I365=32         ;Ixx65 Motor xx Deadband Size                               16
I366=1620       ;Ixx66 Motor xx PWM Scale Factor                            6527
I369=7000       ;Ixx69 Motor xx Output Command Limit                        20480
I371=4096       ;Ixx71 Motor xx Counts per N Commutation Cycles             1000
I372=512        ;Ixx72 Motor xx Commutation Phase Angle                     1365
I376=0.199999809;Ixx76 Motor xx Current-Loop Back-Path Proportional Gain    0.0
I377=1000       ;Ixx77 Motor xx Magnetization Current                       0
I381=$3511      ;Ixx81 Motor xx Power-On Phase Position Address             $0
I382=$78016     ;Ixx82 Motor xx Current-Loop Feedback Address               $0
I383=$3511      ;Ixx83 Motor xx Commutation Position Address values         $78011
I384=$FFFC00    ;Ixx84 Motor xx Current-Loop Feedback Mask Word             $0
I391=$4C0000    ;Ixx91 Motor xx Power-On Phase Position Format              $0
I397=1          ;Ixx97 Motor xx Position Capture & Trigger Mode             0

;Motor 4
I400=1          ;Ixx00 Motor xx Activation Control                          0
I402=$7801C     ;Ixx02 Motor xx Command Output Address PMAC                 $78012
I412=3200       ;Ixx12 Motor xx Warning Following Error Limit               16000
I413=5000000    ;Ixx13 Motor xx Positive Software Position Limit            0
I414=-5000000   ;Ixx14 Motor xx Negative Software Position Limit            0
I415=1000       ;Ixx15 Motor xx Abort/Limit Deceleration Rate               0.25
I416=200        ;Ixx16 Motor xx Maximum Program Velocity                    32.0
I417=50         ;Ixx17 Motor xx Maximum Program Acceleration                0.015625
I419=50         ;Ixx19 Motor xx Maximum Jog/Home Acceleration               0.015625
I421=0          ;Ixx21 Motor xx Jog/Home S-Curve Time                       50
I422=1000       ;Ixx22 Motor xx Jog Speed                                   32.0
I423=1000       ;Ixx23 Motor xx Home Speed and Direction                    32.0
I424=$C20401    ;Ixx24 Motor xx Flag Mode Control                           $1
I428=480        ;Ixx28 Motor xx In-Position Band                            160
I430=6000       ;Ixx30 Motor xx PID Proportional Gain                       2000
I431=0          ;Ixx31 Motor xx PID Derivative Gain                         1280
I432=3820       ;Ixx32 Motor xx PID Velocity Feedforward Gain               1280
I435=100000     ;Ixx35 Motor xx PID Acceleration Feedforward Gain           0
I461=0.049999952;Ixx61 Motor xx Current-Loop Integral Gain                  0
I464=-16        ;Ixx64 Motor xx Deadband Gain Factor                        0
I465=32         ;Ixx65 Motor xx Deadband Size                               16
I466=1620       ;Ixx66 Motor xx PWM Scale Factor                            6527
I469=7000       ;Ixx69 Motor xx Output Command Limit                        20480
I471=4096       ;Ixx71 Motor xx Counts per N Commutation Cycles             1000
I472=512        ;Ixx72 Motor xx Commutation Phase Angle                     1365
I476=0.199999809;Ixx76 Motor xx Current-Loop Back-Path Proportional Gain    0.0
I477=1000       ;Ixx77 Motor xx Magnetization Current                       0
I481=$3511      ;Ixx81 Motor xx Power-On Phase Position Address             $0
I482=$78016     ;Ixx82 Motor xx Current-Loop Feedback Address               $0
I483=$3511      ;Ixx83 Motor xx Commutation Position Address values         $78011
I484=$FFFC00    ;Ixx84 Motor xx Current-Loop Feedback Mask Word             $0
I491=$4C0000    ;Ixx91 Motor xx Power-On Phase Position Format              $0
I497=1          ;Ixx97 Motor xx Position Capture & Trigger Mode             0

I5001=$80028B   ;Data Gathering Buffer Location and Mode                    $0
I5049=10        ;Data Gathering Period                                      0
I5050=$1        ;Data Gathering Selection Mask 1                            $000000

;    I5100-I6699 Coordinate System Set Up
;
;Coordinate System 1     Reserved for PEWIN32PRO Tuning
I5187=1000      ;Isx87 Coordinate System 1 Default Prgrm Acceleration Time  0
I5188=500       ;Isx88 Coordinate System 1 Default Prgrm S-Curve Time       50
I5189=1000      ;Isx89 Coordinate System 1 Default Prgrm Feedrate/Move Time 1000
;Coordinate System 2
I5287=0         ;Isx87 Coordinate System 2 Default Prgrm Acceleration Time  0
I5288=0         ;Isx88 Coordinate System 2 Default Prgrm S-Curve Time       50
I5289=0         ;Isx89 Coordinate System 2 Default Prgrm Feedrate/Move Time 1000
;Coordinate System 3
I5387=0         ;Isx87 Coordinate System 3 Default Prgrm Acceleration Time 0
I5388=0         ;Isx88 Coordinate System 3 Default Prgrm S-Curve Time       50
I5389=0         ;Isx89 Coordinate System 3 Default Prgrm Feedrate/Move Time 1000

;      Talk to Brian Nutter about these
;      I7m00-i7m07 
;      PMAC2 Style Multi-Channel Servo IC I-Variables
;I7000=2996      ;I7m00 Servo IC m MaxPhase/PWM Frequency Control            6527
;;I7001=1         ;I7m01 Servo IC m Phase Clock Frequency Control             0
;I7002=1         ;I7m02 Servo IC m Servo Clock Frequency Control             3 
;I7003=2258      ;I7m03 Servo IC m Hardware Clock Control                    2258
;I7004=3         ;I7m04 Servo IC m PWM Deadtime / PFM Pulse Width Control    15
;I7006=$F30DFE   ;I7m06 Servo IC m ADC Strobe Word check me                  $FFFFFE;

;      I7mn0-i7mn9 
;      PMAC2 Style Channel-Specific Servo IC I-Variables
;      IC m Channel n
;I7010=7         ;Servo IC 0 Channel 1 Encoder/Timer Decoded Control         3
;I7020=7         ;                   2                                       3
;I7030=7         ;                   3                                       3
;I7040=7         ;                   4                                       3
;I7016=0         ;Servo IC 0 Channel 1 Output Mode Select                    2
;I7026=0         ;                   2                                       2
;I7036=0         ;                   3                                       2
;I7046=0         ;                   4                                       2
;      Encoder Conversion Table
I7000=2996
I7001=1
I7002=1
I7003=2257
I7004=3
I7005=$7FFFC0
I7006=$F30DFE
I7007=0
I7008=0
I7009=0
I7010=3
I7011=0
I7012=1
I7013=0
I7014=0
I7015=0
I7016=2
I7017=0
I7018=0
I7019=0
I7020=3
I7021=0
I7022=1
I7023=0
I7024=0
I7025=0
I7026=2
I7027=0
I7028=0
I7029=0
I7030=3
I7031=0
I7032=1
I7033=0
I7034=0
I7035=0
I7036=2
I7037=0
I7038=0
I7039=0
I7040=7
I7041=0
I7042=1
I7043=0
I7044=0
I7045=0
I7046=2
I7047=0
I7048=0
I7049=0
I7050=0
I7051=0
I7052=0
I7053=0
I7054=0
I7055=0
I7056=0
I7057=0
I7058=0
I7059=0
I7060=0
I7061=0
I7062=0
I7063=0
I7064=0
I7065=0
I7066=0
I7067=0
I7068=0
I7069=0
I7070=0
I7071=0
I7072=0
I7073=0
I7074=0
I7075=0
I7076=0
I7077=0
I7078=0
I7079=0
I7080=0
I7081=0
I7082=0
I7083=0
I7084=0
I7085=0
I7086=0
I7087=0
I7088=0
I7089=0
I7090=0
I7091=0
I7092=0
I7093=0
I7094=0
I7095=0
I7096=0
I7097=0
I7098=0
I7099=0
I7100=2996
I7101=1
I7102=1
I7103=2257
I7104=3
I7105=$7FFFC0
I7106=$F30DFE
I8008=$6800BF
I8009=$18018
I8010=$EC0009
I8011=$68013F
I8012=$18018
I8013=$EC000C
I8014=$6801BF
I8015=$18018
I8016=$EC000F
I8017=$68023F
I8018=$18018
I8019=$EC0012
I8020=$6802BF
I8021=$18018
I8022=$EC0015
I8023=$68033F
I8024=$18018
I8025=$EC0018
I8026=$6803BF
I8027=$18018
I8028=$EC001B
I8029=$68043F
I8030=$18018
I8031=$EC001E
I8032=$D03501
I8033=$1FF0
I8034=$10000
I8035=$D03502
I8036=$1FF0
I8037=$10000
I8038=$D03503
I8039=$1FF0
I8040=$10000